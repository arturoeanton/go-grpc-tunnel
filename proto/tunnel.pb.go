// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.3
// source: proto/tunnel.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define los tipos de frames para distinguir control de datos.
type FrameType int32

const (
	FrameType_UNKNOWN           FrameType = 0
	FrameType_CONTROL_INIT      FrameType = 1 // Primer mensaje del cliente al servidor con metadata (token)
	FrameType_CONTROL_ACK       FrameType = 2 // Respuesta del servidor al CONTROL_INIT
	FrameType_DATA              FrameType = 3 // Frame de datos para una conexión Firebird específica
	FrameType_START_DATA_TUNNEL FrameType = 4 // Mensaje del servidor al cliente para iniciar un túnel
	FrameType_TUNNEL_READY      FrameType = 5 // Mensaje del cliente al servidor indicando que el túnel TCP a FB está listo
	FrameType_CLOSE_TUNNEL      FrameType = 6 // Mensaje para cerrar un túnel específico (por error o fin normal)
	FrameType_ERROR             FrameType = 7 // Mensaje de error general o específico del túnel
)

// Enum value maps for FrameType.
var (
	FrameType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CONTROL_INIT",
		2: "CONTROL_ACK",
		3: "DATA",
		4: "START_DATA_TUNNEL",
		5: "TUNNEL_READY",
		6: "CLOSE_TUNNEL",
		7: "ERROR",
	}
	FrameType_value = map[string]int32{
		"UNKNOWN":           0,
		"CONTROL_INIT":      1,
		"CONTROL_ACK":       2,
		"DATA":              3,
		"START_DATA_TUNNEL": 4,
		"TUNNEL_READY":      5,
		"CLOSE_TUNNEL":      6,
		"ERROR":             7,
	}
)

func (x FrameType) Enum() *FrameType {
	p := new(FrameType)
	*p = x
	return p
}

func (x FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tunnel_proto_enumTypes[0].Descriptor()
}

func (FrameType) Type() protoreflect.EnumType {
	return &file_proto_tunnel_proto_enumTypes[0]
}

func (x FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameType.Descriptor instead.
func (FrameType) EnumDescriptor() ([]byte, []int) {
	return file_proto_tunnel_proto_rawDescGZIP(), []int{0}
}

// Mensaje que se intercambia en el stream.
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         FrameType         `protobuf:"varint,1,opt,name=type,proto3,enum=tunnel.FrameType" json:"type,omitempty"`
	ConnectionId string            `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`                                                             // Identificador único para cada túnel de datos Firebird
	Payload      []byte            `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`                                                                                           // Datos binarios (ej. tráfico TCP de Firebird)
	Metadata     map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Metadatos opcionales (ej. token en CONTROL_INIT, mensaje de error)
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tunnel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tunnel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_proto_tunnel_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetType() FrameType {
	if x != nil {
		return x.Type
	}
	return FrameType_UNKNOWN
}

func (x *Frame) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *Frame) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Frame) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_tunnel_proto protoreflect.FileDescriptor

var file_proto_tunnel_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xe3, 0x01, 0x0a,
	0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x2a, 0x8b, 0x01, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x54, 0x55, 0x4e,
	0x4e, 0x45, 0x4c, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07,
	0x32, 0x43, 0x0a, 0x0d, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x32, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x12, 0x0d, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x1a, 0x0d, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x74, 0x75, 0x72, 0x6f, 0x65, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2f,
	0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tunnel_proto_rawDescOnce sync.Once
	file_proto_tunnel_proto_rawDescData = file_proto_tunnel_proto_rawDesc
)

func file_proto_tunnel_proto_rawDescGZIP() []byte {
	file_proto_tunnel_proto_rawDescOnce.Do(func() {
		file_proto_tunnel_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tunnel_proto_rawDescData)
	})
	return file_proto_tunnel_proto_rawDescData
}

var file_proto_tunnel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_tunnel_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_tunnel_proto_goTypes = []interface{}{
	(FrameType)(0), // 0: tunnel.FrameType
	(*Frame)(nil),  // 1: tunnel.Frame
	nil,            // 2: tunnel.Frame.MetadataEntry
}
var file_proto_tunnel_proto_depIdxs = []int32{
	0, // 0: tunnel.Frame.type:type_name -> tunnel.FrameType
	2, // 1: tunnel.Frame.metadata:type_name -> tunnel.Frame.MetadataEntry
	1, // 2: tunnel.TunnelService.ConnectControl:input_type -> tunnel.Frame
	1, // 3: tunnel.TunnelService.ConnectControl:output_type -> tunnel.Frame
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_tunnel_proto_init() }
func file_proto_tunnel_proto_init() {
	if File_proto_tunnel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tunnel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tunnel_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_tunnel_proto_goTypes,
		DependencyIndexes: file_proto_tunnel_proto_depIdxs,
		EnumInfos:         file_proto_tunnel_proto_enumTypes,
		MessageInfos:      file_proto_tunnel_proto_msgTypes,
	}.Build()
	File_proto_tunnel_proto = out.File
	file_proto_tunnel_proto_rawDesc = nil
	file_proto_tunnel_proto_goTypes = nil
	file_proto_tunnel_proto_depIdxs = nil
}
